-='cd -'
..='cd ..'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -1'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
_gitfolderDEL='fd .git | xargs rm -rfv'
abs='cat -Abs '
afind='ack -il'
airport=/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport
brewup='brew list |xargs brew upgrade 2>/dev/null'
c='code .'
ccat=colorize_cat
cdc='cd /Users/skeptycal/local_coding'
cdgo='cd /Users/skeptycal/go/src/github.com/skeptycal'
cdw='cd /Users/skeptycal/Documents/work'
chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
chromekill='ps ux | grep ''[C]hrome Helper --type=renderer'' | grep -v extension-process | tr -s '' '' | cut -d '' '' -f2 | xargs kill'
cless=colorize_less
cls=clear
cp='nocorrect cp'
d='docker '
db='cd /Users/skeptycal/Dropbox'
del='rm -rf'
dir=ls
dj='python3 manage.py runserver'
dl='cd /Users/skeptycal/Downloads'
ducks='du -ck * | sort -rn | head -20'
ebuild='nocorrect ebuild'
egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
ffcurl='curl -H "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.0 (.NET CLR 3.5.30729)"'
fgrep='fgrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
filetree='ls -R | grep '':$'' | sed -e ''s/:$//'' -e ''s/[^-][^\/]*\//--/g'' -e ''s/^/ /'' -e ''s/-/|/'''
flush='sudo dscacheutil -flushcache && killall -HUP mDNSResponder'
ftree='find . -print | sed -e ''s;[^/]*/;|____;g;s;____|; |;g'''
g=git
ga='git add'
gaa='git add --all'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch -d 2>/dev/null'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcas='git commit -a -s'
gcasm='git commit -a -s -m'
gcb='git checkout -b'
gcd='git checkout $(git_develop_branch)'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcor='git checkout --recurse-submodules'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gcss='git commit -S -s'
gcssm='git commit -S -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdup='git diff @{upstream}'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune --jobs=10'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
gist='nocorrect gist'
git-svn-dcommit-push='git svn dcommit && git push github $(git_main_branch):svntrunk'
gitsizecheck='fd .git | xargs du -chs'
gk='\gitk --all --branches &!'
gke='\gitk --all $(git log -g --pretty=%h) &!'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
glod='git log --graph --pretty=''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'''
glods='git log --graph --pretty=''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty=''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'''
glola='git log --graph --pretty=''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'' --all'
glols='git log --graph --pretty=''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'' --stat'
glp=_git_log_prettily
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gmtl='git mergetool --no-prompt'
gmtlvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gob='go build'
goc='go clean'
god='go doc'
gof='go fmt'
gofa='go fmt ./...'
gofx='go fix'
gog='go get'
goga='go get ./...'
goi='go install'
gol='go list'
gom='go mod'
gopa='cd $GOPATH'
gopb='cd $GOPATH/bin'
gops='cd $GOPATH/src'
gor='go run'
got='go test'
gota='go test ./...'
goto='go tool'
gotoc='go tool compile'
gotod='go tool dist'
gotofx='go tool fix'
gov='go vet'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpr='git pull --rebase'
gpristine='git reset --hard && git clean -dffx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase $(git_develop_branch)'
grbi='git rebase -i'
grbm='git rebase $(git_main_branch)'
grbo='git rebase --onto'
grbom='git rebase origin/$(git_main_branch)'
grbs='git rebase --skip'
grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grst='git restore --staged'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gstu='gsta --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gswd='git switch $(git_develop_branch)'
gswm='git switch $(git_main_branch)'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
heroku='nocorrect heroku'
history=omz_history
howmuch='du -sh '
hpodder='nocorrect hpodder'
hs='history | grep '
icloud='cd /Users/skeptycal/Library/Mobile\ Documents/com~apple~CloudDocs/'
iecurl='curl -H "User-Agent: Mozilla/5.0 (Windows; U; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)"'
ip='dig +short myip.opendns.com @resolver1.opendns.com'
ipython='python -c ''import IPython; IPython.terminal.ipapp.launch_new_instance()'''
l='ls -lah'
l.='ls -lhFAd .* --group-directories-first '
la='ls -lAh'
lag='ls -lhFAgG --group-directories-first '
ll='ls -lh'
localip='ipconfig getifaddr en0'
ls='gls --color=tty'
lsa='ls -lah'
lsd='ls -1Adh  -- */'
lss='ls -lhFArs '
lw='ls -hF --group-directories-first '
man='nocorrect man'
map='xargs -n1'
md='mkdir -p'
mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'
mine='sudo chown -R $(id -un):$(id -gn) '
mkdir='nocorrect mkdir'
mount='mount | column -t'
mp='multipass '
mv='nocorrect mv'
mysql='nocorrect mysql'
nethack='telnet nethack.alt.org'
nis='npm install --save '
npath='echo ${PATH//:/\\n}'
p='poetry '
pb='poetry build'
pc='pre-commit '
pca='pre-commit run --all-files'
pci='pre-commit install && pre-commit install-hooks && pre-commit autoupdate'
pi='poetry init'
pip=pip-pss
please='sudo '
plistbuddy=/usr/libexec/PlistBuddy
pm=pygmentize
pos='poetry show'
pret='prettier -uw * 2>/dev/null'
prr='poetry export -f requirements.txt >requirements.txt'
pst='poetry show --tree'
pu='poetry update'
pub='poetry publish --build'
pwdcopy='pwd | pbcopy'
py=python
pycclean='find $PWD -name "*.pyc" -exec rm -rf {} \; && find $PWD -name "__pycache__" -exec rm -rf {} \;'
pyfind='find . -name "*.py"'
pygrep='grep -nr --include="*.py"'
pymod='chmod +x *.py -c --preserve-root -- '
pypath='python3 -c "import sys; print(sys.path)" | tr "," "\n" | grep -v "egg"'
pyserver='python -m http.server'
rd=rmdir
rebrew='brew upgrade $(brew list --formula) && brew doctor && brew cleanup'
reload='exec ${SHELL} -l'
sba='. ${DEFAULT_ENVIRONMENT_FOLDER_NAME}/bin/activate'
sda=deactivate
servethis='python -c ''import SimpleHTTPServer; SimpleHTTPServer.test()'''
sites='cd /Users/skeptycal/Sites'
ssh='ssh -R 10999:localhost:22'
su='nocorrect su'
sudo='nocorrect sudo'
time='gtime '
toomuch='du -sh ~'
treetotal='tree | tail -1'
trim='sed -e ''s/^[[:space:]]*//g'' -e ''s/[[:space:]]*$//g'''
vsc='code .'
vsca='code --add'
vscd='code --diff'
vscde='code --disable-extensions'
vsced='code --extensions-dir'
vscg='code --goto'
vscie='code --install-extension'
vscl='code --log'
vscn='code --new-window'
vscr='code --reuse-window'
vscu='code --user-data-dir'
vscue='code --uninstall-extension'
vscv='code --verbose'
vscw='code --wait'
whichmac='uname -a'
